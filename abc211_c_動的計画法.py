'''
AtCoder Beginner Contest 211
C - chokudai
'''
S = [''] + list(input())
N = len(S)-1

T = [''] + list('chokudai')
M = len(T)-1

'''
dp[i][j]を、Sのi文字目までを使って、chokudaiのj文字目までを
選択する方法と定義する。
'''
dp = [[-1] * (M+1) for _ in range(N+1) ]

for i in range(N+1):
    
    for j in range(M+1):
        
        '''
        j=0のとき、
        「chokudaiの0文字目までを選択する」というのは、
        下線を全く引いていないことを表します。つまり1通りです。
        '''
        if j == 0:
            dp[i][j] = 1
            continue
        
        '''
        i=0, 1<=i<=8のとき、
        「Sの0文字目まで使う」すなわち「Sからまだ1文字もつかっていない」
        ときに、「chokudaiのj(j>=1)文字目まで選択する」ことはできません。
        つまり0通りです。
        '''
        if i == 0:
            dp[i][j] = 0
            continue
        
        '''
        1 <= i <= N, 1 <= j <= 8のとき
        '''
        if S[i] != T[j]:
            '''
            S[i] != T[j]のとき
            「Sのi文字目までを使って、Tのj文字目まで選択する方法」
            を考えていますが、Sのi文字目とTのj文字目が異なるので、
            Sのi文字目に下線を引くことはありえません。
            よって
            「Sの(i-1)文字目をつかって、Tのj文字目まで選択する方法」
            の場合の数と等しいです。
            つまりdp[i-1][j]通りです。
            '''
            dp[i][j] = dp[i-1][j]
        
        elif S[i] == T[j]:
            '''
            S[i] != T[j]のとき
            '''
            
            '''
            Sのi文字目に下線を引かないとき、
            先程の議論から、これはdp[i-1][j]通りです。
            '''
            x = dp[i-1][j]
            
            '''
            Sのi文字目に下線を引くとき
            これは「Sの(i-1)文字目までを使って、Tの(j-1)文字目まで選択する方法」
            の場合の数と等しいです。
            つまりdp[i-1][j-1]通りです。
            '''
            y = dp[i-1][j-1]
            
            '''
            まとめると、dp[i-1][j]+dp[i-1][j-1]です。
            '''
            dp[i][j] = x + y

print(dp[N][M])
