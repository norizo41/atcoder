'''
■区間分割の仕方を最適化する問題
    N個の要素が1列に並んでいて、これをいくつかの区間に分割したいものとします。
    各区間 [l, r) にはスコア c[l][r]が付いているとします。
    KをN以下の正の整数として、K+1個の整数をt_0, t_1, ..., t_Kを
    0 = t_0 < t_1 < ...< t_K = Nを満たすように取ったとき、
    区間分割[t_0, t_1), [t_1, t_2), ... ,[t_K-1, t_K)のスコアを
        c[t_0][t_1] + c[t_1][t_2] + ... + c[t_K-1][t_K]
    によって定義します。
    N要素の区間分割のの仕方を全て考えたときの、
    考えられるスコアの最小値を求めてください。
'''

'''緩和'''
def chmin(a, b):
    if a > b:
        a = b
    return a

INF = 10 ** 12

'''入力'''
N = int(input())
c = [list(map(int, input().split())) for _ in range(N+1)]

'''
DPテーブルの設定：
dp[i] ← 区間[0, i)について、いくつかの区間に分割する最小コスト
'''
dp = [INF] * (N+1)
'''初期条件'''
dp[0] = 0

'''
DPループ
'''
for i in range(N+1):
    for j in range(i):
        dp[i] = chmin(dp[i], dp[j] + c[i][j])

print(dp[N])
